/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Bluetooth.java
 *
 * Created on 1/06/2010, 09:10:35 AM
 */

package GUI;

import OperacionesBluetooth.BuscarDispositivos;
import OperacionesBluetooth.BuscarServicios;
import OperacionesBluetooth.Lanzador;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.IOException;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jesus
 */
public class Bluetooth extends javax.swing.JFrame {

    private boolean buscando=false;
    public static boolean enviando=false;
    private ArrayList<String> rutas;
    private ArrayList<Long> tamTot;
    private int cont;
    private double aux;
    private String tot;
    /** Creates new form Bluetooth */
    public Bluetooth() {
        initComponents();
        progresoEnvio.setStringPainted(true);
        progresoEnvio.setVisible(false);
        buscandoDisps.setVisible(false);
        totalEnviado.setStringPainted(true);        
        totalEnviado.setVisible(false);
        rutas = new ArrayList();
        tamTot = new ArrayList();
//        UIManager.LookAndFeelInfo[] info;
//       info = UIManager.getInstalledLookAndFeels();
     try{
//       UIManager.setLookAndFeel(info[2].getClassName());
       UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
       SwingUtilities.updateComponentTreeUI(this);
     }catch(Exception e){e.printStackTrace();}
//        for(int a=0; a<info.length; a++){
//            System.out.println(info[a].getClassName());
//        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Explorador = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        archivos = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buscarDisps = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        envArchivos = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        disponibles = new javax.swing.JTable();
        progresoEnvio = new javax.swing.JProgressBar();
        buscandoDisps = new javax.swing.JProgressBar();
        totalEnviado = new javax.swing.JProgressBar();
        borrar = new javax.swing.JButton();
        numElementos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bluetooth ~File Sender~");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Explorador.setBorder(javax.swing.BorderFactory.createTitledBorder("SelecciÃ³n de archivos"));
        Explorador.setDoubleBuffered(true);
        Explorador.setMultiSelectionEnabled(true);
        Explorador.setName("Explorador"); // NOI18N
        Explorador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExploradorActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        archivos.setBorder(null);
        archivos.setFont(new java.awt.Font("Comic Sans MS", 1, 13));
        archivos.setForeground(new java.awt.Color(0, 124, 5));
        archivos.setToolTipText("Eliminar: seleccione -> click derecho");
        archivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(archivos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 13));
        jLabel1.setText("Path de los archivos");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buscarDisps.setFont(new java.awt.Font("Comic Sans MS", 0, 13));
        buscarDisps.setText("Buscar dispositivos");
        buscarDisps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarDispsActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 13));
        jLabel2.setText("Disponibles");

        envArchivos.setFont(new java.awt.Font("Comic Sans MS", 0, 13));
        envArchivos.setText("Enviar archivo(s)");
        envArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envArchivosActionPerformed(evt);
            }
        });

        disponibles.setFont(new java.awt.Font("Comic Sans MS", 0, 13));
        disponibles.setForeground(new java.awt.Color(3, 1, 169));
        disponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dispositivo", "URL"
            }
        ));
        disponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disponiblesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(disponibles);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );

        progresoEnvio.setFont(new java.awt.Font("Comic Sans MS", 0, 14));

        buscandoDisps.setIndeterminate(true);

        totalEnviado.setFont(new java.awt.Font("Comic Sans MS", 0, 14));
        totalEnviado.setToolTipText("Estado del envio");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(buscarDisps, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscandoDisps, 0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(envArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(progresoEnvio, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addGap(26, 26, 26))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(totalEnviado, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buscandoDisps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscarDisps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(envArchivos)
                .addGap(32, 32, 32)
                .addComponent(progresoEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 46, Short.MAX_VALUE)
                .addComponent(totalEnviado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );

        borrar.setFont(new java.awt.Font("Comic Sans MS", 0, 13));
        borrar.setText("Borrar la lista");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        numElementos.setFont(new java.awt.Font("Comic Sans MS", 1, 13));
        numElementos.setForeground(new java.awt.Color(88, 114, 139));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numElementos, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                    .addComponent(Explorador, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Explorador, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(borrar)
                            .addComponent(numElementos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExploradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExploradorActionPerformed
        if(evt.getActionCommand().equals("ApproveSelection")){
          rutas.add(Explorador.getSelectedFile().toString());
          tamTot.add(Explorador.getSelectedFile().length());
          archivos.setListData(rutas.toArray());
          calcularTamTot();
         }
}//GEN-LAST:event_ExploradorActionPerformed

    void calcularTamTot(){      
       aux=0;
          for(cont=0; cont<tamTot.size(); cont++){
            aux+=tamTot.get(cont);
          }
       if(aux>0){
        aux = (aux/1024.0)/1024.0;        
        numElementos.setText(rutas.size()+" archivos / "+mochar(aux)+" MB");
       }else
        numElementos.setText("0 archivos / 0 MB");
    }

    String mochar(double d){
       tot = String.valueOf(d);
       for(cont=0; cont<tot.length(); cont++){
         if(tot.charAt(cont)=='.'){
           return tot.substring(0, (cont+3));
         }
       }
       return null;
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      
    }//GEN-LAST:event_formWindowOpened

    private void buscarDispsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarDispsActionPerformed
      if(!buscando){
        buscando=true;
        buscandoDisps.setVisible(true);
        new Thread(){
        @Override
        public void run(){
            try {
            buscarDisps.setText("Buscando dispositivos");
            new BuscarDispositivos().buscarD();
            buscarDisps.setText("Buscando servicios");
            prepararTabla();
            new BuscarServicios(disponibles).buscarS();
         } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage(),"Error de I/O", JOptionPane.ERROR_MESSAGE);
         } catch (InterruptedException ex) {
            JOptionPane.showMessageDialog(null,ex.getMessage(),"Error de InterrupciÃ³n", JOptionPane.ERROR_MESSAGE);
         }
          buscandoDisps.setVisible(false);
          buscarDisps.setText("Buscar nuevamente");
          buscando=false;
        }
       }.start();
      }
    }//GEN-LAST:event_buscarDispsActionPerformed

    private void envArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envArchivosActionPerformed
      if(!enviando){
       if(disponibles.getRowCount()==0){
           JOptionPane.showMessageDialog(null, "No hay dispositivos", "AtenciÃ³n", JOptionPane.INFORMATION_MESSAGE);
           return;
       }
       envArchivos.setText("Enviando archivos");          
          System.out.println("enviando:>"+enviando);
      // progresoEnvio.setVisible(true);
       new Thread(){
        @Override
        public void run(){
        ListModel modeloArchivos = archivos.getModel();
        Lanzador l = new Lanzador(); //necesitamos un objeto para sincronizar el envÃ­o...
        if(modeloArchivos.getSize()<1){
            JOptionPane.showMessageDialog(null, "Agregue archivos a la lista", "No haga eso!", JOptionPane.INFORMATION_MESSAGE);
         //   progresoEnvio.setVisible(false);
            return;
        }
     try {        
        for(int dispositivos=0; dispositivos<disponibles.getRowCount();dispositivos++){
           totalEnviado.setVisible(true);
            totalEnviado.setMaximum(modeloArchivos.getSize());            
            totalEnviado.setString("Enviado 0/"+modeloArchivos.getSize());
          for(int archis=0; archis<modeloArchivos.getSize(); archis++){
              archivos.setSelectedIndex(archis); //elemento enviando
              l.mandarArchivo(disponibles.getValueAt(dispositivos, 1).toString(), modeloArchivos.getElementAt(archis).toString() );
                Thread.sleep(2000); //tiempo para q el disp se desconecte
            totalEnviado.setValue(archis+1);
            totalEnviado.setString("Enviado "+(archis+1)+"/"+modeloArchivos.getSize());            
          }
            Thread.sleep(2000);
           totalEnviado.setVisible(false);
        }
     JOptionPane.showMessageDialog(null, "Proceso de envio terminado!", "AcciÃ³n completada", JOptionPane.INFORMATION_MESSAGE);
     } catch (IOException ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage(), "Error de E/S", JOptionPane.INFORMATION_MESSAGE);
     }catch(Exception e){
          JOptionPane.showMessageDialog(null, e.getMessage(), "ExcepciÃ³n", JOptionPane.INFORMATION_MESSAGE);
     }
        //progresoEnvio.setVisible(false);
        envArchivos.setText("Enviar archivo(s)");
        }
       }.start();
     }
    }//GEN-LAST:event_envArchivosActionPerformed
        
     public void prepararTabla(){    
         DefaultTableModel tabla = (DefaultTableModel) disponibles.getModel();
           for(int rmv=tabla.getRowCount(); rmv>0; rmv--){
            tabla.removeRow(--rmv);
           }
    }

    private void archivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivosMouseClicked
        if(evt.getButton()==MouseEvent.BUTTON3){
          if(rutas.size()>0){
           if(archivos.isSelectionEmpty()){
               JOptionPane.showMessageDialog(null, "        Seleccione un elemento,\nluego presione click derecho sobre el mismo", "Para eliminar...", JOptionPane.INFORMATION_MESSAGE);
               return;
           }            
            rutas.remove(archivos.getSelectedIndex());
            tamTot.remove(archivos.getSelectedIndex());
            archivos.setListData(rutas.toArray());
            calcularTamTot();
          }         
       }
    }//GEN-LAST:event_archivosMouseClicked

    javax.swing.JPopupMenu menu;
    private void disponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disponiblesMouseClicked
      if(evt.getButton()==MouseEvent.BUTTON3){
          menu = new javax.swing.JPopupMenu();
          javax.swing.JMenuItem j = new javax.swing.JMenuItem("Enviar solo a este dispositivo");
          //agregar un evento al Item
          j.addActionListener(new ActionListener() {
       public void actionPerformed(ActionEvent e) {
        if(disponibles.getSelectedRowCount()>0){
        final String url = disponibles.getValueAt(disponibles.getSelectedRow(), 1).toString();
       if(url!=null){
        if(!enviando)
        new Thread(){
        @Override
        public void run(){
   
        ListModel modeloArchivos = archivos.getModel();
        Lanzador l = new Lanzador(); //necesitamos un objeto para sincronizar el envÃ­o...    
        if(modeloArchivos.getSize()<1){
            JOptionPane.showMessageDialog(null, "Agregue archivos a la lista", "No haga eso!", JOptionPane.INFORMATION_MESSAGE);
            progresoEnvio.setVisible(false);       
            return;
        }
        try {
             totalEnviado.setVisible(true);
             totalEnviado.setMaximum(modeloArchivos.getSize());
             totalEnviado.setString("Enviado 0/"+modeloArchivos.getSize());
            for(int archis=0; archis<modeloArchivos.getSize(); archis++){
             archivos.setSelectedIndex(archis); //elemento enviando
                 l.mandarArchivo(url, modeloArchivos.getElementAt(archis).toString());
                    Thread.sleep(2000); //tiempo para q el disp se desconecte
             totalEnviado.setValue(archis+1);
             totalEnviado.setString("Enviado "+(archis+1)+"/"+modeloArchivos.getSize());
            }
             Thread.sleep(2000);
            totalEnviado.setVisible(false);
            JOptionPane.showMessageDialog(null, "Los archivos se enviaron correctamente", "Accion completada", JOptionPane.INFORMATION_MESSAGE);
         } catch (IOException ex) {
             JOptionPane.showMessageDialog(null, ex.getMessage(), "Error de E/S", JOptionPane.INFORMATION_MESSAGE);
         }catch(Exception e){
             JOptionPane.showMessageDialog(null, e.getMessage(), "ExcepciÃ³n", JOptionPane.INFORMATION_MESSAGE);
         }
         progresoEnvio.setVisible(false);
         envArchivos.setText("Enviar archivo(s)");      
         }
        }.start();
       }
       }//selectedRowsCount
       }
      }
     );
          //
          menu.add(j);
          menu.show(evt.getComponent(), evt.getX(), evt.getY());          
        }        
    }//GEN-LAST:event_disponiblesMouseClicked

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        rutas =null;
        tamTot=null;
        rutas = new ArrayList();
        tamTot= new ArrayList();
        archivos.setListData(rutas.toArray());
        calcularTamTot();
    }//GEN-LAST:event_borrarActionPerformed
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bluetooth().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser Explorador;
    private javax.swing.JList archivos;
    private javax.swing.JButton borrar;
    private javax.swing.JProgressBar buscandoDisps;
    private javax.swing.JButton buscarDisps;
    private javax.swing.JTable disponibles;
    private javax.swing.JButton envArchivos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel numElementos;
    public static javax.swing.JProgressBar progresoEnvio;
    private javax.swing.JProgressBar totalEnviado;
    // End of variables declaration//GEN-END:variables

}
